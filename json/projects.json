[
  {
    "id": "cmgqreu0i0014zzfjk5nloa1p",
    "title": "The Greek Myth API",
    "slug": "thegreekmythapi",
    "summary": "A comprehensive REST API providing detailed information about Greek mythology, including gods, titans, monsters, and heroes with 200+ entries and multiple endpoints.",
    "content": "<h2 id=\"introducing-the-greek-myth-api-dive-into-the-world-of-gods-titans-monsters-and-heroes\">Introducing the Greek Myth API: Dive into the World of Gods, Titans, Monsters, and Heroes</h2><p>As a long-time enthusiast of Greek mythology, I've always been fascinated by the rich tapestry of stories, characters, and adventures from ancient Greece. Recently, I decided to combine this passion with my love for coding by creating a Greek Myth API. After some development and testing, I'm thrilled to announce that the API is now live on Vercel.</p><h4 id=\"why-i-created-the-greek-myth-api\">Why I Created the Greek Myth API</h4><p>The idea behind this API stemmed from my own passion and a practical need for a project I'm developing. I wanted a reliable source of Greek mythology data that I could integrate seamlessly. The more I thought about it, the more I realized that others might benefit from such a tool as well. Thus, I made the API publicly available for free, with no rate limits, allowing anyone to explore and utilize the data without restrictions.</p><h4 id=\"features-of-the-greek-myth-api\">Features of the Greek Myth API</h4><p>My Greek mythology API is packed with a wealth of information, organized into multiple endpoints for easy access:</p><ul><li><strong>Gods</strong> : Information about the major and minor gods of Greek mythology.<ul><li>Endpoint: <code>/api/gods</code></li></ul></li><li><strong>Titans</strong> : Details about the primordial beings and predecessors of the gods.<ul><li>Endpoint: <code>/api/titans</code></li></ul></li><li><strong>Monsters</strong> : Data on the various creatures that populate Greek myths.<ul><li>Endpoint: <code>/api/monsters</code></li></ul></li><li><strong>Heroes</strong> : Profiles of the legendary heroes renowned for their epic deeds.<ul><li>Endpoint: <code>/api/heroes</code></li></ul></li><li><strong>Main Data Endpoint</strong> : A comprehensive endpoint that aggregates all entries.<ul><li>Endpoint: <code>/api/data</code></li></ul></li></ul><p>Currently, the API houses 200 entries, each rich with details. For each entity, you can find:</p><ul><li><strong>Name</strong> : The name of the god, titan, monster, or hero.</li><li><strong>Description</strong> : A brief overview of their story and significance.</li><li><strong>Character Attributes</strong> : Origin, symbols, abode, and powers.</li><li><strong>Family Connections</strong> : Their relatives and notable relationships.</li><li><strong>Stories</strong> : Key myths and tales associated with them.</li><li><strong>Image</strong> : Visual representation to bring the myth to life (in progress).</li></ul><p>I'm still working on adding images for the entries to create for the API. I might use AI to generate these images, which would add a visual dimension to the mythological data.</p><h4 id=\"how-to-use-the-api\">How to Use the API</h4><p>Accessing the API is straightforward. Simply visit the main site at <a href=\"https://thegreekmythapi.vercel.app/\">thegreekmythapi.vercel.app</a> to get started. From there, you can explore the various endpoints to retrieve the data you need for your projects.<br>For instance, to get data on all gods, you would use the following endpoint:</p><pre><code class=\"language-bash\">GET /api/gods\n</code></pre><p>Similarly, for a comprehensive dataset that includes all entries, you can use:</p><pre><code class=\"language-bash\">GET /api/data\n</code></pre><h4 id=\"supporting-the-project\">Supporting the Project</h4><p>While the API is free to use, I've also included an option for donations on the site. If you find the API useful and would like to support its continued development and maintenance, any contributions would be greatly appreciated.</p><h4 id=\"conclusion\">Conclusion</h4><p>Creating this API has been a labor of love, blending my passion for Greek mythology with the excitement of developing a useful tool for others. Whether you're a developer, a mythology enthusiast, or someone working on a project that could benefit from this data, I hope you find the Greek Myth API as enjoyable and useful as I do.</p><p>Feel free to explore, integrate, and get inspired by the timeless stories of Greek mythology!<br><strong>Main site</strong> : <a href=\"https://thegreekmythapi.vercel.app/\">thegreekmythapi.vercel.app</a></p>",
    "date": "2024-06-22T17:23:55.000Z",
    "lastmod": "2025-06-09T03:18:30.021Z",
    "tags": [
      "API",
      "Greek Mythology",
      "Vercel",
      "REST API",
      "Node.js"
    ],
    "categories": [
      "api"
    ],
    "images": [
      "https://res.cloudinary.com/dfjq9qvoz/image/upload/v1749439089/egglogwfguvb4npphhu8.webp"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": true,
    "layout": null,
    "github": null,
    "demo": "https://thegreekmythapi.vercel.app",
    "technologies": [
      "Node.js",
      "Vercel",
      "REST API",
      "JSON",
      "Express.js"
    ],
    "createdAt": "2025-10-14T16:11:29.778Z",
    "updatedAt": "2025-10-14T16:11:29.778Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgqreu9a0016zzfj0sp0whhg",
    "title": "From Rock Bottom to React: How I Turned My Card Game Into a Web App",
    "slug": "from-rock-bottom-to-react-how-i-turned-my-card-game-into-a-web-app",
    "summary": "A personal journey of turning a card game invented during a difficult time into a modern web application using Next.js, complete with animations and mobile support.",
    "content": "<h1 id=\"\"></h1><p>Sometimes the best ideas come from the darkest places. About 15 years ago, I was in one of those places‚Äîa really low point where all I had was time and a deck of cards. What started as mindless card flipping became something unexpected: a game I'd eventually call <strong>Margin Match</strong>.</p><h2 id=\"the-birth-of-margin-match\">The Birth of Margin Match</h2><p>Picture this: me, sitting alone, pulling cards one from the top of the deck, one from the bottom, discarding them, and repeating. But then I started noticing patterns and asking myself questions. What if the left card I drew could only \"play\" on the right card if their values were within a specific margin?</p><p>The rule became simple: the left card can only match the right card if it's plus one, minus one, or exactly the same value. A 7 matches with a 6, 7, or 8. Nothing else. If they don't match, you discard both cards, shuffle everything back together, and try again.</p><p>It sounds almost trivial, but this little constraint turned a mindless activity into something genuinely engaging. The decisions started mattering. When do you play? When do you discard? How do you strategically work through your deck?</p><h2 id=\"%F0%9F%A7%91%F0%9F%8F%BC%E2%80%8D%F0%9F%A4%9D%E2%80%8D%F0%9F%A7%91%F0%9F%8F%BE-a-late-night-conversation\">üßëüèº‚Äçü§ù‚Äçüßëüèæ A Late-Night Conversation </h2><p>Fast forward to recently. I was talking to someone who mentioned she was up at 2 AM playing solitaire, and naturally, I told her about this weird game I'd invented years ago. But here's the thing about card games‚Äîthey're nearly impossible to explain without actually showing someone. She asked for a visual, and that simple request lit a fire under me.</p><p>I had to build this thing.</p><h2 id=\"%F0%9F%91%A8%F0%9F%8F%BE%E2%80%8D%F0%9F%92%BB-building-margin-match-the-tech-stack\">üë®üèæ‚Äçüíª Building Margin Match: The Tech Stack</h2><p>When I decided to bring Margin Match to life digitally, I wanted to use modern tools that would let me create something polished and professional. Here's what I landed on:</p><p><strong>Next.js 15</strong> became my foundation‚Äîthe latest version with all the performance improvements and developer experience enhancements. There's something satisfying about building on cutting-edge tech.</p><p><strong>Framer Motion</strong> handles all the card animations. When you draw cards or play matches, everything flows smoothly. Cards slide, flip, and transition in ways that make the digital version feel almost tactile.</p><p><strong>Capacitor</strong> lets me export the web app as an Android build. Sure, there are always a few quirks with Capacitor builds (they tend to lag behind the web version), but being able to take a web application and turn it into a native mobile app still feels like magic.</p><p>For the visual polish, I incorporated <strong>Lucide and React Icons</strong> for crisp, modern iconography. The interface needed to feel clean and intuitive‚Äîafter all, the game's complexity should come from the strategy, not from figuring out how to use the app.</p><h2 id=\"the-details-that-matter\">The Details That Matter</h2><p>One thing I'm particularly proud of is integrating <strong>ElevenLabs sound effects</strong>‚Äîcompletely free‚Äîthat give the game audio feedback. There's something deeply satisfying about hearing cards flip and matches register.</p><p>The whole thing is hosted on <strong>Vercel</strong> because, honestly, the deployment process is so smooth it almost feels like cheating. Push to GitHub, and within minutes, the updated version is live.</p><p>I even set it up as a <strong>Progressive Web App</strong>, so it can be installed on phones and desktops, giving it that native app feel without requiring app store distribution.</p><h2 id=\"%F0%9F%8E%AE-the-game-rules-in-case-you-want-to-try\">üéÆ The Game Rules (In Case You Want to Try)</h2><p>Here's how Margin Match actually works:</p><p>üåÄ <strong>Begin Your Journey</strong>: Hit 'Start Game' to get your first hand from the deck.</p><p>üé≤ <strong>Draw with Intent</strong>: Tap 'Draw Cards' to pull one from the top, one from the bottom.</p><p>üîÅ <strong>Play with Precision</strong>: The left card must align with the right board card‚Äîit must be +1, 0, or -1 in value (with Aces looping to Kings and vice versa).</p><p>üÉè <strong>Make Your Move</strong>: If they match, hit 'Play' to make your move.</p><p>‚ùå <strong>When Fate Frowns</strong>: No match? Press 'Discard' to send both cards to the discard pile.</p><p>‚ôªÔ∏è <strong>A Deck Reborn</strong>: When you run out of cards, the discard pile gets shuffled back into the deck.</p><p>üèÜ <strong>Victory or Defeat</strong>: Win by clearing all cards, or lose if no more plays are possible.</p>\n<!--kg-card-begin: html-->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Margin Match Game</title>\n    <style>\n      body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    margin: 0;\n    padding: 20px;\n    /* Remove the background gradient */\n    min-height: 100vh;\n}\n\n        .game-container {\n            max-width: 800px;\n            margin: 0 auto;\n            background: rgba(255, 255, 255, 0.95);\n            border-radius: 20px;\n            padding: 30px;\n            box-shadow: 0 20px 40px rgba(0,0,0,0.1);\n            backdrop-filter: blur(10px);\n        }\n\n        .game-header {\n            text-align: center;\n            margin-bottom: 30px;\n        }\n        .game-title {\n            font-size: 2.5rem;\n            font-weight: 800;\n            background: linear-gradient(135deg, #667eea, #764ba2);\n            -webkit-background-clip: text;\n            background-clip: text;\n            -webkit-text-fill-color: transparent;\n            margin-bottom: 10px;\n        }\n\n        .game-stats {\n            display: flex;\n            justify-content: center;\n            gap: 30px;\n            margin-bottom: 20px;\n            flex-wrap: wrap;\n        }\n\n        .stat {\n            text-align: center;\n            padding: 10px 20px;\n            background: #f8fafc;\n            border-radius: 10px;\n            border: 2px solid #e2e8f0;\n        }\n\n        .stat-label {\n            font-size: 0.875rem;\n            color: #64748b;\n            font-weight: 600;\n            text-transform: uppercase;\n            letter-spacing: 0.05em;\n        }\n\n        .stat-value {\n            font-size: 1.5rem;\n            font-weight: 700;\n            color: #1e293b;\n        }\n\n        .game-board {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 30px;\n            margin: 30px 0;\n        }\n\n        .card-section {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 15px;\n        }\n\n        .section-label {\n            font-size: 1rem;\n            font-weight: 600;\n            color: #64748b;\n            text-transform: uppercase;\n            letter-spacing: 0.05em;\n        }\n\n        .card-pair {\n            display: flex;\n            gap: 20px;\n        }\n\n        .card {\n            width: 80px;\n            height: 110px;\n            border-radius: 12px;\n            border: 3px solid;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 1.5rem;\n            font-weight: 700;\n            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n            cursor: pointer;\n            position: relative;\n            overflow: hidden;\n        }\n\n        .card.board {\n            border-color: #374151;\n            background: #1f2937;\n            color: white;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);\n        }\n\n        .card.drawn {\n            border-color: #3b82f6;\n            background: white;\n            color: #1e40af;\n            box-shadow: 0 8px 20px rgba(59, 130, 246, 0.2);\n        }\n\n        .card.playable {\n            border-color: #10b981;\n            box-shadow: 0 8px 25px rgba(16, 185, 129, 0.4);\n            animation: glow 2s infinite ease-in-out;\n        }\n\n        .card.empty {\n            border-color: #e2e8f0;\n            background: #f8fafc;\n            color: #94a3b8;\n            border-style: dashed;\n        }\n\n        .card:hover:not(.empty) {\n            transform: scale(1.05) translateY(-5px);\n        }\n\n        .action-buttons {\n            display: flex;\n            gap: 15px;\n            justify-content: center;\n            flex-wrap: wrap;\n        }\n\n        .btn {\n            padding: 12px 24px;\n            border: none;\n            border-radius: 12px;\n            font-size: 1rem;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            text-transform: uppercase;\n            letter-spacing: 0.05em;\n        }\n\n        .btn-primary {\n            background: linear-gradient(135deg, #3b82f6, #1e40af);\n            color: white;\n            box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);\n        }\n\n        .btn-primary:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 6px 20px rgba(59, 130, 246, 0.4);\n        }\n\n        .btn-success {\n            background: linear-gradient(135deg, #10b981, #059669);\n            color: white;\n            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);\n        }\n\n        .btn-success:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 6px 20px rgba(16, 185, 129, 0.4);\n        }\n\n        .btn-warning {\n            background: linear-gradient(135deg, #f59e0b, #d97706);\n            color: white;\n            box-shadow: 0 4px 15px rgba(245, 158, 11, 0.3);\n        }\n\n        .btn-warning:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 6px 20px rgba(245, 158, 11, 0.4);\n        }\n\n        .btn-danger {\n            background: linear-gradient(135deg, #ef4444, #dc2626);\n            color: white;\n            box-shadow: 0 4px 15px rgba(239, 68, 68, 0.3);\n        }\n\n        .btn:disabled {\n            opacity: 0.5;\n            cursor: not-allowed;\n            transform: none !important;\n        }\n\n        .game-message {\n            text-align: center;\n            padding: 20px;\n            margin: 20px 0;\n            border-radius: 12px;\n            font-size: 1.1rem;\n            font-weight: 600;\n        }\n\n        .message-info {\n            background: #dbeafe;\n            color: #1e40af;\n            border: 2px solid #93c5fd;\n        }\n\n        .message-success {\n            background: #d1fae5;\n            color: #065f46;\n            border: 2px solid #6ee7b7;\n        }\n\n        .message-error {\n            background: #fee2e2;\n            color: #991b1b;\n            border: 2px solid #fca5a5;\n        }\n\n        .play-arrow {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: #10b981;\n            font-size: 2rem;\n            margin: 10px 0;\n        }\n\n        @keyframes glow {\n            0%, 100% { \n                box-shadow: 0 8px 25px rgba(16, 185, 129, 0.4);\n            }\n            50% { \n                box-shadow: 0 12px 35px rgba(16, 185, 129, 0.6);\n            }\n        }\n\n        @media (max-width: 768px) {\n            .game-container {\n                padding: 20px;\n                margin: 10px;\n            }\n            \n            .card {\n                width: 60px;\n                height: 85px;\n                font-size: 1.2rem;\n            }\n            \n            .card-pair {\n                gap: 15px;\n            }\n            \n            .game-stats {\n                gap: 15px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"game-container\">\n        <div class=\"game-header\">\n            <div class=\"game-stats\">\n                <div class=\"stat\">\n                    <div class=\"stat-label\">Deck</div>\n                    <div class=\"stat-value\" id=\"deckCount\">52</div>\n                </div>\n                <div class=\"stat\">\n                    <div class=\"stat-label\">Discard</div>\n                    <div class=\"stat-value\" id=\"discardCount\">0</div>\n                </div>\n                <div class=\"stat\">\n                    <div class=\"stat-label\">Status</div>\n                    <div class=\"stat-value\" id=\"gameStatus\">Ready</div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"game-board\">\n            <!-- Board Cards (Initial) -->\n            <div class=\"card-section\">\n                <div class=\"section-label\">Board Cards</div>\n                <div class=\"card-pair\">\n                    <div class=\"card board\" id=\"leftBoard\">?</div>\n                    <div class=\"card board\" id=\"rightBoard\">?</div>\n                </div>\n            </div>\n\n            <div class=\"play-arrow\">‚Üì</div>\n\n            <!-- Drawn Cards -->\n            <div class=\"card-section\">\n                <div class=\"section-label\">Drawn Cards</div>\n                <div class=\"card-pair\">\n                    <div class=\"card drawn empty\" id=\"leftDrawn\">Draw</div>\n                    <div class=\"card drawn empty\" id=\"rightDrawn\">Cards</div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"game-message message-info\" id=\"gameMessage\">\n            Click \"Start Game\" to begin playing Margin Match!\n        </div>\n\n        <div class=\"action-buttons\">\n            <button class=\"btn btn-primary\" id=\"startBtn\">Start Game</button>\n            <button class=\"btn btn-primary\" id=\"drawBtn\" disabled>Draw Cards</button>\n            <button class=\"btn btn-success\" id=\"playBtn\" disabled>Play Cards</button>\n            <button class=\"btn btn-warning\" id=\"discardBtn\" disabled>Discard Cards</button>\n            <button class=\"btn btn-danger\" id=\"resetBtn\">Reset Game</button>\n        </div>\n    </div>\n\n    <script>\n        // Game state\n        let gameState = {\n            deck: [],\n            discard: [],\n            leftInitial: null,\n            rightInitial: null,\n            leftDrawn: null,\n            rightDrawn: null,\n            gameStatus: 'idle',\n            message: '',\n            canPlay: false\n        };\n\n        // DOM elements\n        const elements = {\n            leftBoard: document.getElementById('leftBoard'),\n            rightBoard: document.getElementById('rightBoard'),\n            leftDrawn: document.getElementById('leftDrawn'),\n            rightDrawn: document.getElementById('rightDrawn'),\n            deckCount: document.getElementById('deckCount'),\n            discardCount: document.getElementById('discardCount'),\n            gameStatus: document.getElementById('gameStatus'),\n            gameMessage: document.getElementById('gameMessage'),\n            startBtn: document.getElementById('startBtn'),\n            drawBtn: document.getElementById('drawBtn'),\n            playBtn: document.getElementById('playBtn'),\n            discardBtn: document.getElementById('discardBtn'),\n            resetBtn: document.getElementById('resetBtn')\n        };\n\n        // Card utilities\n        const cardValues = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'];\n        const suits = ['‚ô†', '‚ô•', '‚ô¶', '‚ô£'];\n\n        function createDeck() {\n            const deck = [];\n            for (let suit of suits) {\n                for (let i = 0; i < cardValues.length; i++) {\n                    deck.push({\n                        value: cardValues[i],\n                        suit: suit,\n                        rank: i\n                    });\n                }\n            }\n            return shuffleDeck(deck);\n        }\n\n        function shuffleDeck(deck) {\n            const shuffled = [...deck];\n            for (let i = shuffled.length - 1; i > 0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n            }\n            return shuffled;\n        }\n\n        function isPlayable(drawnCard, boardCard) {\n            if (!drawnCard || !boardCard) return false;\n            \n            const diff = Math.abs(drawnCard.rank - boardCard.rank);\n            return diff <= 1 || diff === 12; // Adjacent ranks or Ace-King wrap\n        }\n\n        function displayCard(element, card) {\n            if (card) {\n                element.textContent = card.value;\n                element.classList.remove('empty');\n            } else {\n                element.textContent = element.id.includes('Board') ? '?' : 'Empty';\n                element.classList.add('empty');\n            }\n        }\n\n        function updateUI() {\n            // Update cards\n            displayCard(elements.leftBoard, gameState.leftInitial);\n            displayCard(elements.rightBoard, gameState.rightInitial);\n            displayCard(elements.leftDrawn, gameState.leftDrawn);\n            displayCard(elements.rightDrawn, gameState.rightDrawn);\n\n            // Update stats\n            elements.deckCount.textContent = gameState.deck.length;\n            elements.discardCount.textContent = gameState.discard.length;\n            elements.gameStatus.textContent = gameState.gameStatus.charAt(0).toUpperCase() + gameState.gameStatus.slice(1);\n\n            // Update message\n            elements.gameMessage.textContent = gameState.message;\n            elements.gameMessage.className = 'game-message ' + \n                (gameState.gameStatus === 'won' ? 'message-success' : \n                 gameState.gameStatus === 'lost' ? 'message-error' : 'message-info');\n\n            // Update button states\n            elements.startBtn.disabled = gameState.gameStatus === 'playing';\n            elements.drawBtn.disabled = gameState.gameStatus !== 'playing' || \n                (gameState.leftDrawn && gameState.rightDrawn);\n            elements.playBtn.disabled = !gameState.canPlay || gameState.gameStatus !== 'playing';\n            elements.discardBtn.disabled = !gameState.leftDrawn || !gameState.rightDrawn || \n                gameState.gameStatus !== 'playing';\n\n            // Highlight playable cards\n            elements.leftDrawn.classList.toggle('playable', gameState.canPlay);\n            \n            // Check if game is over\n            if (gameState.gameStatus === 'won' || gameState.gameStatus === 'lost') {\n                elements.drawBtn.disabled = true;\n                elements.playBtn.disabled = true;\n                elements.discardBtn.disabled = true;\n            }\n        }\n\n        function hasPlayableCards(deck, discard, rightBoard) {\n            const allCards = [...deck, ...discard];\n            return allCards.some(card => isPlayable(card, rightBoard));\n        }\n\n        // Game actions\n        function startGame() {\n            const deck = createDeck();\n            \n            gameState = {\n                deck: deck.slice(2), // Remove first and last cards\n                discard: [],\n                leftInitial: deck[0],\n                rightInitial: deck[deck.length - 1],\n                leftDrawn: null,\n                rightDrawn: null,\n                gameStatus: 'playing',\n                message: 'Game started! Draw cards to begin playing.',\n                canPlay: false\n            };\n            \n            updateUI();\n        }\n\n        function drawCards() {\n            if (gameState.deck.length === 0) {\n                if (gameState.discard.length === 0) {\n                    gameState.gameStatus = 'lost';\n                    gameState.message = 'Game over! No more cards to draw.';\n                    updateUI();\n                    return;\n                }\n                \n                // Reshuffle discard into deck\n                gameState.deck = shuffleDeck([...gameState.discard]);\n                gameState.discard = [];\n                gameState.message = 'Discard pile reshuffled into deck!';\n            }\n\n            if (gameState.deck.length >= 2) {\n                gameState.leftDrawn = gameState.deck.shift();\n                gameState.rightDrawn = gameState.deck.pop();\n            } else if (gameState.deck.length === 1) {\n                gameState.leftDrawn = gameState.deck.shift();\n                gameState.rightDrawn = null;\n            }\n\n            gameState.canPlay = isPlayable(gameState.leftDrawn, gameState.rightInitial);\n            \n            if (gameState.canPlay) {\n                gameState.message = 'Great! Left card can be played on right board card.';\n            } else {\n                gameState.message = 'Cards cannot be played. You must discard them.';\n            }\n\n            updateUI();\n        }\n\n        function playCards() {\n            if (!gameState.canPlay) return;\n\n            // Move drawn cards to board\n            gameState.leftInitial = gameState.leftDrawn;\n            gameState.rightInitial = gameState.rightDrawn;\n            gameState.leftDrawn = null;\n            gameState.rightDrawn = null;\n            gameState.canPlay = false;\n\n            // Check win condition\n            if (gameState.deck.length === 0 && gameState.discard.length === 0) {\n                gameState.gameStatus = 'won';\n                gameState.message = 'Congratulations! You won the game!';\n            } else {\n                gameState.message = 'Cards played successfully! Draw more cards.';\n            }\n\n            updateUI();\n        }\n\n        function discardCards() {\n            if (!gameState.leftDrawn && !gameState.rightDrawn) return;\n\n            // Add drawn cards to discard pile\n            if (gameState.leftDrawn) gameState.discard.push(gameState.leftDrawn);\n            if (gameState.rightDrawn) gameState.discard.push(gameState.rightDrawn);\n\n            gameState.leftDrawn = null;\n            gameState.rightDrawn = null;\n            gameState.canPlay = false;\n\n            // Check if game can continue\n            const canContinue = gameState.deck.length > 0 || \n                hasPlayableCards(gameState.deck, gameState.discard, gameState.rightInitial);\n\n            if (!canContinue && gameState.deck.length === 0) {\n                gameState.gameStatus = 'lost';\n                gameState.message = 'Game over! No more playable cards.';\n            } else {\n                gameState.message = 'Cards discarded. Draw more cards to continue.';\n            }\n\n            updateUI();\n        }\n\n        function resetGame() {\n            gameState = {\n                deck: [],\n                discard: [],\n                leftInitial: null,\n                rightInitial: null,\n                leftDrawn: null,\n                rightDrawn: null,\n                gameStatus: 'idle',\n                message: 'Click \"Start Game\" to begin playing Margin Match!',\n                canPlay: false\n            };\n            \n            updateUI();\n        }\n\n        // Event listeners\n        elements.startBtn.addEventListener('click', startGame);\n        elements.drawBtn.addEventListener('click', drawCards);\n        elements.playBtn.addEventListener('click', playCards);\n        elements.discardBtn.addEventListener('click', discardCards);\n        elements.resetBtn.addEventListener('click', resetGame);\n\n        // Initialize UI\n        updateUI();\n    </script>\n</body>\n</html>\n<!--kg-card-end: html-->\n<h2 id=\"why-this-matters-to-me\">Why This Matters to Me</h2><p>What started as a way to pass time during a really difficult period became something I'm genuinely proud of. There's something beautiful about taking an idea that existed only in my head and as scattered cards on a table, and turning it into something other people can experience.</p><p>The technical challenge was fun‚Äîfiguring out card game logic, smooth animations, mobile responsiveness, and audio integration. But more than that, it represents a full circle moment. From that low place where I had nothing but time and cards, to now having the skills and tools to build something real and share it with the world.</p><p>Sometimes the best projects aren't the ones we plan meticulously, but the ones that emerge from genuine personal experience and the simple desire to share something meaningful with others.</p><p>Now, when someone asks me about that weird card game I invented, I don't have to struggle with explanations. I can just send them a link.</p><p><strong>Check out the game here via the web:</strong><br><a href=\"https://marginmatch.app/\">https://marginmatch.app/</a></p>",
    "date": "2025-05-26T01:47:00.000Z",
    "lastmod": "2025-05-26T20:46:31.000Z",
    "tags": [
      "Next.js",
      "Card Game",
      "Framer Motion",
      "Progressive Web App",
      "Personal Project"
    ],
    "categories": [
      "web-app"
    ],
    "images": [
      "https://images.unsplash.com/photo-1501003878151-d3cb87799705?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3wxMTc3M3wwfDF8c2VhcmNofDEwfHxwbGF5aW5nJTIwY2FyZHxlbnwwfHx8fDE3NDc2MTg0MjV8MA&ixlib=rb-4.1.0&q=80&w=2000"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": true,
    "layout": null,
    "github": null,
    "demo": "https://marginmatch.app/",
    "technologies": [
      "Next.js 15",
      "React",
      "Framer Motion",
      "Capacitor",
      "Lucide Icons",
      "React Icons",
      "ElevenLabs",
      "Vercel"
    ],
    "createdAt": "2025-10-14T16:11:30.094Z",
    "updatedAt": "2025-10-14T16:11:30.094Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgqreuhb0018zzfj1icwxqw6",
    "title": "Animelist - Discord bot",
    "slug": "animelist-discord-bot",
    "summary": "A Discord bot that allows users to search for Anime, Manga, Users and Characters on AniList with unique mid-sentence command functionality.",
    "content": "<h1 id=\"my-journey-creating-animelist-a-unique-discord-bot-for-anime-enthusiasts\">My Journey Creating AnimeList: A Unique Discord Bot for Anime Enthusiasts</h1><p>Hey fellow otaku and coding enthusiasts!</p><p>Today, I want to share my experience creating a Discord bot that I'm particularly proud of - AnimeList. This project combined my love for anime with my passion for coding, resulting in a unique tool that brought a smile to many anime fans in our Discord community.</p><h2 id=\"the-birth-of-animelist\">The Birth of AnimeList</h2><p>AnimeList was born out of a desire to have quick, seamless access to anime information right within our Discord conversations. I wrote this bot in JavaScript, leveraging several powerful modules including fs, turndown, discord.js, and fetch, among others.</p><h2 id=\"what-makes-animelist-special\">What Makes AnimeList Special?</h2><h3 id=\"mid-sentence-commands\">Mid-Sentence Commands</h3><p>One of the coolest features of AnimeList is its ability to process commands mid-sentence. Unlike many Discord bots that require separate messages or strict command formats, AnimeList can be summoned right in the flow of your conversation. Imagine typing:</p><p>\"You should watch a{Attack on Titan}! Its really good.\"</p><p>The bot would seamlessly fetch and display information about Attack on Titan without interrupting your message. This feature made interactions feel more natural and conversational.</p><h3 id=\"powered-by-anilist-api\">Powered by AniList API</h3><p>To ensure accurate and up-to-date information, I integrated the AniList API into AnimeList. This allowed users to search for:</p><ul><li>Anime series</li><li>Manga titles</li><li>Characters</li><li>User profiles</li></ul><p>The depth of information available made AnimeList a go-to resource for quick anime-related queries within our Discord server.</p><h2 id=\"the-technical-side\">The Technical Side</h2><p>Creating AnimeList was a great learning experience. Some of the key technical aspects included:</p><ul><li>Implementing efficient API calls to AniList</li><li>Parsing and formatting the returned data for Discord display</li><li>Creating a flexible command parsing system for mid-sentence functionality</li><li>Handling user interactions and error cases gracefully</li></ul><h2 id=\"current-status-and-future-plans\">Current Status and Future Plans</h2><p>While slash commands have become the new standard for Discord bots, AnimeList still holds its own with its unique mid-sentence functionality. It continues to be a useful tool for our anime discussions.</p><p>Looking ahead, I'm considering:</p><ul><li>Adapting some features to work with slash commands</li><li>Expanding the database to include more niche anime and manga</li><li>Implementing a recommendation system based on user preferences</li></ul><h2 id=\"wrapping-up\">Wrapping Up</h2><p>Creating AnimeList was more than just a coding project - it was a journey that combined my technical skills with my passion for anime. It's incredibly satisfying to see something you've built being used and enjoyed by others in your community.</p><p>Have you ever created a bot or tool for your hobbies? I'd love to hear about your experiences in the comments below!</p><p>Until next time, happy coding and anime watching!</p><div class=\"kg-card kg-button-card kg-align-center\"><a href=\"https://github.com/xi-Rick/animelist\" class=\"kg-btn kg-btn-accent\">Check it out on Github</a></div>",
    "date": "2022-12-01T16:53:00.000Z",
    "lastmod": "2024-07-08T00:37:50.000Z",
    "tags": [
      "Discord Bot",
      "JavaScript",
      "AniList API",
      "Anime",
      "Community Tool"
    ],
    "categories": [
      "discord-bot"
    ],
    "images": [
      "https://images.unsplash.com/photo-1552308995-2baac1ad5490?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3wxMTc3M3wwfDF8c2VhcmNofDEzfHxqYXZhc2NyaXB0fGVufDB8fHx8fDE3MTkxNjQ4ODF8MA&ixlib=rb-4.0.3&q=80&w=2000"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": false,
    "layout": null,
    "github": "https://github.com/xi-Rick/animelist",
    "demo": null,
    "technologies": [
      "JavaScript",
      "Discord.js",
      "AniList API",
      "Node.js",
      "fs",
      "turndown",
      "fetch"
    ],
    "createdAt": "2025-10-14T16:11:30.384Z",
    "updatedAt": "2025-10-14T16:11:30.384Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgqrf04g001azzfj08hde69p",
    "title": "Citadel",
    "slug": "citadel",
    "summary": "An AI-powered tool that generates detailed and unique backstories for characters from the TV show Rick and Morty.",
    "content": "<h1 id=\"building-my-rick-and-morty-inspired-citadel-project\">Building My Rick and Morty-Inspired \"Citadel\" Project</h1><p>Hey fellow dimension-hoppers!</p><p>I'm thrilled to share my latest passion project ‚Äì a website I've dubbed \"Citadel.\" It's a tribute to the mind-bending universe of Rick and Morty, blending my love for the show with my passion for web development and AI.</p><h2 id=\"the-concept\">The Concept</h2><p>Inspired by the show's \"Citadel of Ricks,\" my Citadel aims to be a vast interdimensional repository of Rick and Morty information. I'm leveraging the Rick and Morty API and integrating various OpenAI endpoints to generate unique content that even the Council of Ricks would approve of.</p><h2 id=\"current-features\">Current Features</h2><h3 id=\"1-web-interface\">1. Web Interface</h3><ul><li>Built with Next.js and Next UI</li><li>Basic but functional design (more intuitive interface coming soon!)</li></ul><h3 id=\"2-discord-bot\">2. Discord Bot</h3><ul><li>Offers similar functionality to the website</li><li>Perfect for discussing infinite timelines with your Discord crew</li></ul><h3 id=\"3-character-based-story-generation\">3. Character-Based Story Generation</h3><ul><li>Click on any character from the Rick and Morty API</li><li>Instantly generates a unique story about that character</li></ul><h3 id=\"4-ai-generated-illustrations\">4. AI-Generated Illustrations</h3><ul><li>Uses DALL-E 3 to create images based on story context</li><li>Warning: This feature can be as expensive as Kalaxian crystals, so it's not always active!</li></ul><h2 id=\"upcoming-features\">Upcoming Features</h2><h3 id=\"1-audio-narration\">1. Audio Narration</h3><ul><li>Working on adding voice narration for generated stories</li><li>Hoping for future OpenAI voice cloning support (Imagine Rick narrating his own adventures!)</li></ul><h3 id=\"2-mongodb-integration\">2. MongoDB Integration</h3><ul><li>Plan to store and organize user-generated stories</li><li>Create a collection of alternate universe Rick and Morty tales</li></ul><h2 id=\"the-big-picture\">The Big Picture</h2><p>This project is my way of combining multiple technologies to create something as unique as Pickle Rick. It's ambitious, sure, but so is stealing from the Galactic Federation!</p><h2 id=\"wrapping-up\">Wrapping Up</h2><p>Have you ever crafted a project inspired by your favorite TV show or movie? Drop your interdimensional cable in the comments below ‚Äì I'd love to hear about it!</p><p>Until our paths cross in another dimension</p><p>P.S. Wubba lubba dub dub!</p><hr><h2 id=\"tech-stack-highlight\">Tech Stack Highlight</h2><ul><li>Frontend: Next.js, Next UI</li><li>Backend: Node.js</li><li>APIs: Rick and Morty API, OpenAI (GPT, DALL-E)</li><li>Database (Planned): MongoDB</li><li>Bot Platform: Discord</li></ul><hr><p>Remember, the multiverse is vast, and so are the possibilities for this project. Stay tuned for more updates as Citadel evolves!</p><div class=\"kg-card kg-button-card kg-align-center\"><a href=\"https://citadel.vercel.app\" class=\"kg-btn kg-btn-accent\">Go check out my project!</a></div>",
    "date": "2022-12-19T16:48:18.000Z",
    "lastmod": "2024-06-23T13:47:58.000Z",
    "tags": [
      "Next.js",
      "OpenAI",
      "Rick and Morty",
      "Discord Bot",
      "AI Art"
    ],
    "categories": [
      "web-app"
    ],
    "images": [
      "https://images.unsplash.com/photo-1592564630984-7410f94db184?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wwfDF8c2VhcmNofDJ8fHJpY2slMjBhbmQlMjBtb3J0eXxlbnwwfHx8fDE2NzM2NzA5NzE&ixlib=rb-4.0.3&q=80&w=2000"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": true,
    "layout": null,
    "github": null,
    "demo": "https://citadel.vercel.app",
    "technologies": [
      "Next.js",
      "Next UI",
      "Node.js",
      "OpenAI",
      "DALL-E",
      "Discord.js",
      "MongoDB"
    ],
    "createdAt": "2025-10-14T16:11:37.696Z",
    "updatedAt": "2025-10-14T16:11:37.696Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgrf8qe000010ufh1ytw7ag5",
    "title": "VoteWise",
    "slug": "votewise",
    "summary": "A political web application that allows users to track their local representatives' voting records and legislation using the Congress.gov API for increased civic engagement.",
    "content": "A political web application that allows users to track their local representatives' voting records and legislation using the Congress.gov API for increased civic engagement.",
    "date": "2025-10-15T03:18:35.882Z",
    "lastmod": "2025-10-15T03:18:35.882Z",
    "tags": [],
    "categories": [
      "web-app"
    ],
    "images": [
      "/static/images/votewise.jpg"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": true,
    "layout": "ProjectLayout",
    "github": "https://github.com/xi-rick/votewise",
    "demo": null,
    "technologies": [
      "Next.js 15",
      "React 19",
      "TypeScript",
      "Congress.gov API"
    ],
    "createdAt": "2025-10-15T03:18:35.928Z",
    "updatedAt": "2025-10-15T03:18:35.928Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgrf8qso00030ufhvu612r0x",
    "title": "Break the Wall",
    "slug": "break-the-wall",
    "summary": "A transparency tool that analyzes SEC filings and corporate data to expose corporate hierarchies and executive compensation, revealing the \"wall\" of positions designed to protect wealth rather than create value.",
    "content": "A transparency tool that analyzes SEC filings and corporate data to expose corporate hierarchies and executive compensation, revealing the \"wall\" of positions designed to protect wealth rather than create value.",
    "date": "2025-10-15T03:18:36.405Z",
    "lastmod": "2025-10-15T03:18:36.405Z",
    "tags": [],
    "categories": [
      "web-app"
    ],
    "images": [
      "/static/images/break-the-wall.jpg"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": true,
    "layout": "ProjectLayout",
    "github": "https://github.com/xi-Rick/break-the-wall",
    "demo": null,
    "technologies": [
      "Next.js",
      "TypeScript",
      "SEC EDGAR API",
      "D3.js",
      "Recharts"
    ],
    "createdAt": "2025-10-15T03:18:36.456Z",
    "updatedAt": "2025-10-15T03:18:36.456Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgrf8qx400050ufh00tyr61q",
    "title": "Steam Insight",
    "slug": "steam-insight",
    "summary": "Steam Insight is a modern Steam game discovery platform built with Next.js and TypeScript. Explore thousands of games with intelligent search, detailed reviews, rich media, and advanced analytics.",
    "content": "Steam Insight is a modern Steam game discovery platform built with Next.js and TypeScript. Explore thousands of games with intelligent search, detailed reviews, rich media, and advanced analytics.",
    "date": "2025-10-15T03:18:36.569Z",
    "lastmod": "2025-10-15T03:18:36.569Z",
    "tags": [],
    "categories": [
      "web-app"
    ],
    "images": [
      "/static/images/steam-insight.jpg"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": true,
    "layout": "ProjectLayout",
    "github": "https://github.com/xi-Rick/steam-insight",
    "demo": null,
    "technologies": [
      "Next.js",
      "TypeScript",
      "React",
      "Steam API"
    ],
    "createdAt": "2025-10-15T03:18:36.617Z",
    "updatedAt": "2025-10-15T03:18:36.617Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgrf8r2900070ufhbwxxix5s",
    "title": "Captain's Log",
    "slug": "captains-log",
    "summary": "A voice-powered Progressive Web App inspired by One Piece and Star Trek that uses OpenAI's Whisper technology to transcribe speech into text, creating a personal digital logbook with AI-powered summarization.",
    "content": "A voice-powered Progressive Web App inspired by One Piece and Star Trek that uses OpenAI's Whisper technology to transcribe speech into text, creating a personal digital logbook with AI-powered summarization.",
    "date": "2025-10-15T03:18:36.747Z",
    "lastmod": "2025-10-15T03:18:36.747Z",
    "tags": [],
    "categories": [
      "web-app"
    ],
    "images": [
      "/static/images/captains-log.jpg"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": true,
    "layout": "ProjectLayout",
    "github": "https://github.com/xi-Rick/captains-log",
    "demo": null,
    "technologies": [
      "Next.js 14",
      "React 18",
      "shadcn/ui",
      "OpenAI Whisper API",
      "MongoDB",
      "NextAuth.js",
      "Tailwind CSS",
      "react-hook-form",
      "Zod"
    ],
    "createdAt": "2025-10-15T03:18:36.801Z",
    "updatedAt": "2025-10-15T03:18:36.801Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgrf8r7b00090ufh442qzc2x",
    "title": "ArchGaming",
    "slug": "archgaming",
    "summary": "üéÆ Transform your Arch Linux system into a gaming powerhouse with intelligent hardware detection, performance optimization, and complete gaming stack installation. Supports 8+ Arch derivatives.",
    "content": "üéÆ Transform your Arch Linux system into a gaming powerhouse with intelligent hardware detection, performance optimization, and complete gaming stack installation. Supports 8+ Arch derivatives.",
    "date": "2025-10-15T03:18:36.923Z",
    "lastmod": "2025-10-15T03:18:36.923Z",
    "tags": [],
    "categories": [
      "web-app"
    ],
    "images": [
      "/static/images/archgaming.jpg"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": true,
    "layout": "ProjectLayout",
    "github": "https://github.com/xi-Rick/archgaming",
    "demo": null,
    "technologies": [
      "Bash",
      "Linux",
      "Gaming",
      "Automation"
    ],
    "createdAt": "2025-10-15T03:18:36.983Z",
    "updatedAt": "2025-10-15T03:18:36.983Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgrf8rdz000b0ufhebborg9y",
    "title": "DevSetup",
    "slug": "devsetup",
    "summary": "üöÄ A cross-platform development environment setup script. Transform any Linux distro into a modern web development powerhouse with Node.js, Docker, IDEs, and more. Supports Arch, Ubuntu, Fedora, openSUSE.",
    "content": "üöÄ A cross-platform development environment setup script. Transform any Linux distro into a modern web development powerhouse with Node.js, Docker, IDEs, and more. Supports Arch, Ubuntu, Fedora, openSUSE.",
    "date": "2025-10-15T03:18:37.173Z",
    "lastmod": "2025-10-15T03:18:37.173Z",
    "tags": [],
    "categories": [
      "web-app"
    ],
    "images": [
      "/static/images/devsetup.jpg"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": true,
    "layout": "ProjectLayout",
    "github": "https://github.com/xi-Rick/devsetup",
    "demo": null,
    "technologies": [
      "Shell",
      "Linux",
      "Node.js",
      "Docker",
      "Automation"
    ],
    "createdAt": "2025-10-15T03:18:37.223Z",
    "updatedAt": "2025-10-15T03:18:37.223Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgrf8ril000d0ufh70rkg2ax",
    "title": "Dock App Demo",
    "slug": "dock-app-demo",
    "summary": "This project showcases a MacOS-inspired Dock component built with NextJS 14's App Router and Cult/UI's libraries. It integrates Progressive Web App (PWA) functionality using @ducanh2912/next-pwa.",
    "content": "This project showcases a MacOS-inspired Dock component built with NextJS 14's App Router and Cult/UI's libraries. It integrates Progressive Web App (PWA) functionality using @ducanh2912/next-pwa.",
    "date": "2025-10-15T03:18:37.333Z",
    "lastmod": "2025-10-15T03:18:37.333Z",
    "tags": [],
    "categories": [
      "web-app"
    ],
    "images": [
      "/static/images/dock-app-demo.jpg"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": true,
    "layout": "ProjectLayout",
    "github": "https://github.com/xi-Rick/dock-app-demo",
    "demo": null,
    "technologies": [
      "Next.js",
      "TypeScript",
      "PWA",
      "UI Components"
    ],
    "createdAt": "2025-10-15T03:18:37.389Z",
    "updatedAt": "2025-10-15T03:18:37.389Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgrf8rmy000f0ufhy01ptjb2",
    "title": "My Sidebar App",
    "slug": "my-sidebar-app",
    "summary": "This starter template demonstrates how to build a functional Next.js 14 application featuring Aceternity UI's Sidebar component. It includes dark mode support and is mobile responsive.",
    "content": "This starter template demonstrates how to build a functional Next.js 14 application featuring Aceternity UI's Sidebar component. It includes dark mode support and is mobile responsive.",
    "date": "2025-10-15T03:18:37.497Z",
    "lastmod": "2025-10-15T03:18:37.497Z",
    "tags": [],
    "categories": [
      "web-app"
    ],
    "images": [
      "/static/images/my-sidebar-app.jpg"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": true,
    "layout": "ProjectLayout",
    "github": "https://github.com/xi-Rick/my-sidebar-app",
    "demo": null,
    "technologies": [
      "Next.js",
      "TypeScript",
      "Aceternity UI",
      "Responsive Design"
    ],
    "createdAt": "2025-10-15T03:18:37.546Z",
    "updatedAt": "2025-10-15T03:18:37.546Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgrf8rrf000h0ufhzoa5lso0",
    "title": "Next.js Ghost Frontend",
    "slug": "nextjs14-ghost-frontend",
    "summary": "Transform your Ghost-powered blog into a visual masterpiece with this state-of-the-art NextJS 14 Ghost Frontend. Built with the robust capabilities of Next.js, TypeScript, and the Aceternity UI library.",
    "content": "Transform your Ghost-powered blog into a visual masterpiece with this state-of-the-art NextJS 14 Ghost Frontend. Built with the robust capabilities of Next.js, TypeScript, and the Aceternity UI library.",
    "date": "2025-10-15T03:18:37.655Z",
    "lastmod": "2025-10-15T03:18:37.655Z",
    "tags": [],
    "categories": [
      "web-app"
    ],
    "images": [
      "/static/images/nextjs14-ghost-frontend.jpg"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": false,
    "layout": "ProjectLayout",
    "github": "https://github.com/xi-Rick/nextjs14-ghost-frontend",
    "demo": null,
    "technologies": [
      "Next.js",
      "TypeScript",
      "Ghost CMS",
      "Aceternity UI"
    ],
    "createdAt": "2025-10-15T03:18:37.707Z",
    "updatedAt": "2025-10-15T03:18:37.707Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgrf8rvz000j0ufhh742a8y1",
    "title": "Next.js Pages Template",
    "slug": "nextjs-pages-template",
    "summary": "A robust starter template for Next.js 13 applications featuring NextUI for UI design, MongoDB for data management, and Next-PWA for Progressive Web App capabilities.",
    "content": "A robust starter template for Next.js 13 applications featuring NextUI for UI design, MongoDB for data management, and Next-PWA for Progressive Web App capabilities.",
    "date": "2025-10-15T03:18:37.825Z",
    "lastmod": "2025-10-15T03:18:37.825Z",
    "tags": [],
    "categories": [
      "web-app"
    ],
    "images": [
      "/static/images/nextjs-pages-template.jpg"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": false,
    "layout": "ProjectLayout",
    "github": "https://github.com/xi-Rick/nextjs-pages-template",
    "demo": null,
    "technologies": [
      "Next.js",
      "TypeScript",
      "MongoDB",
      "NextUI",
      "PWA"
    ],
    "createdAt": "2025-10-15T03:18:37.871Z",
    "updatedAt": "2025-10-15T03:18:37.871Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  },
  {
    "id": "cmgrf8s0u000l0ufhdiyqzsf0",
    "title": "What If Anime",
    "slug": "what-if-anime",
    "summary": "‚ö° A revolutionary platform where anime enthusiasts become architects of alternative realities. Create, vote on, and discuss compelling \"what if\" scenarios that reimagine your favorite anime stories with different outcomes and character arcs.",
    "content": "‚ö° A revolutionary platform where anime enthusiasts become architects of alternative realities. Create, vote on, and discuss compelling \"what if\" scenarios that reimagine your favorite anime stories with different outcomes and character arcs.",
    "date": "2025-10-15T03:18:37.998Z",
    "lastmod": "2025-10-15T03:18:37.998Z",
    "tags": [],
    "categories": [
      "web-app"
    ],
    "images": [
      "/static/images/what-if-anime.jpg"
    ],
    "authors": [
      "Dana Davis"
    ],
    "draft": false,
    "featured": true,
    "layout": "ProjectLayout",
    "github": "https://github.com/xi-Rick/anime",
    "demo": null,
    "technologies": [
      "Next.js 15",
      "React 19",
      "TypeScript",
      "Supabase",
      "PostgreSQL"
    ],
    "createdAt": "2025-10-15T03:18:38.046Z",
    "updatedAt": "2025-10-15T03:18:38.046Z",
    "authorId": "cmgqrczwd0000zzfjqkoasu1o"
  }
]